{"version":3,"sources":["sci/impl/hierarchies.cljc"],"mappings":";AAMA,wCAAA,xCAAMA,wFAAkBC;AAAxB,AACE,sDAAA,AAAAC,wGAAA,mFAAA,kEAAA,AAAA,yEAAA,AAAA,rXAACC,+DAAQ,AAAA,kFAAMF;;AAEjB,AAAA,oCAAA,4CAAAG,hFAAME;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,gEAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,gEAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAC,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,kEAAA,lEAAMD,6EACFL,IAAIO,IAAIC;AADZ,AAEG,AAACC,6BAAoB,AAACV,sCAAiBC,KAClB,WAAKU;AAAL,AACE,OAACC,+CAAOD,EAAEH,IAAIC;;;AAJxC;;;AAAA,CAAA,kEAAA,lEAAMH,6EAMFO,KAAKF,EAAEH,IAAIC;AANf,AAOG,OAACG,+CAAOD,EAAEH,IAAIC;;;AAPjB,CAAA,4DAAA,5DAAMH;;AAAN,AASA,AAAA,sCAAA,8CAAAF,pFAAMW;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,kEAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,kEAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAR,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,oEAAA,pEAAMQ,+EACFd,IAAIO,IAAIC;AADZ,AAEG,AAACC,6BAAoB,AAACV,sCAAiBC,KAClB,WAAKU;AAAL,AACE,OAACK,iDAASL,EAAEH,IAAIC;;;AAJ1C;;;AAAA,CAAA,oEAAA,pEAAMM,+EAMFF,KAAKF,EAAEH,IAAIC;AANf,AAOG,OAACO,iDAASL,EAAEH,IAAIC;;;AAPnB,CAAA,8DAAA,9DAAMM;;AAAN,AASA,AAAA,wCAAA,gDAAAX,xFAAMc;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,oEAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,oEAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAX,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,sEAAA,tEAAMW,iFACFjB,IAAIkB,MAAMV;AADd,AAEG,QAAA,AAAAP,JAAMS,oBAAG,AAACX,sCAAiBC;AAA3B,AACE,OAACmB,mDAAKT,EAAEQ,MAAMV;;;AAHnB,CAAA,sEAAA,tEAAMS,iFAIFL,KAAKF,EAAEQ,MAAMV;AAJjB,AAKG,OAACW,mDAAKT,EAAEQ,MAAMV;;;AALjB,CAAA,gEAAA,hEAAMS;;AAAN,AAOA,AAAA,uCAAA,+CAAAd,tFAAMkB;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,mEAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,mEAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAf,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,qEAAA,rEAAMe,gFACFrB,IAAIO;AADR,AAEG,QAAA,AAAAN,JAAMS,oBAAG,AAACX,sCAAiBC;AAA3B,AACE,OAACsB,kDAAUZ,EAAEH;;;AAHlB,CAAA,qEAAA,rEAAMc,gFAIFT,KAAKF,EAAEH;AAJX,AAKG,OAACe,kDAAUZ,EAAEH;;;AALhB,CAAA,+DAAA,/DAAMc;;AAAN,AAOA,AAAA,yCAAA,iDAAAlB,1FAAMqB;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,qEAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,qEAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAAlB,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,uEAAA,vEAAMkB,kFACFxB,IAAIO;AADR,AAEG,QAAA,AAAAN,JAAMS,oBAAG,AAACX,sCAAiBC;AAA3B,AACE,OAACyB,oDAAYf,EAAEH;;;AAHpB,CAAA,uEAAA,vEAAMiB,kFAIFZ,KAAKF,EAAEH;AAJX,AAKG,OAACkB,oDAAYf,EAAEH;;;AALlB,CAAA,iEAAA,jEAAMiB;;AAAN,AAOA,AAAA,qCAAA,6CAAArB,lFAAMwB;AAAN,AAAA,IAAAD,WAAA,AAAA;AAAA,AAAA,QAAAA;KAAA;AAAA,OAAAC,iEAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;KAAA;AAAA,OAAAA,iEAAA,CAAA,UAAA,MAAA,CAAA,UAAA,MAAA,CAAA,UAAA;;;;AAAA,MAAA,KAAArB,MAAA,CAAA,8DAAA,AAAA;;;;;AAAA,CAAA,mEAAA,nEAAMqB,8EACF3B,IAAIO;AADR,AAEG,QAAA,AAAAN,JAAMS,oBAAG,AAACX,sCAAiBC;AAA3B,AACE,OAAC4B,gDAAQlB,EAAEH;;;AAHhB,CAAA,mEAAA,nEAAMoB,8EAIFf,KAAKF,EAAEH;AAJX,AAKG,OAACqB,gDAAQlB,EAAEH;;;AALd,CAAA,6DAAA,7DAAMoB;;AAAN","names":["sci.impl.hierarchies/global-hierarchy","ctx","cljs.core/deref","cljs.core.get_in","var_args","G__31931","sci.impl.hierarchies/derive*","js/Error","tag","parent","sci.impl.vars/alter-var-root","h","cljs.core.derive","_ctx","G__31942","sci.impl.hierarchies/underive*","cljs.core.underive","G__31953","sci.impl.hierarchies/isa?*","child","cljs.core.isa_QMARK_","G__31960","sci.impl.hierarchies/ancestors*","cljs.core.ancestors","G__31973","sci.impl.hierarchies/descendants*","cljs.core.descendants","G__31998","sci.impl.hierarchies/parents*","cljs.core.parents"],"sourcesContent":["(ns sci.impl.hierarchies\n  {:no-doc true}\n  (:require [sci.impl.vars :as vars]))\n\n;;;; Hierarchies\n\n(defn global-hierarchy [ctx]\n  (get-in @(:env ctx) [:namespaces 'clojure.core 'global-hierarchy]))\n\n(defn derive*\n  ([ctx tag parent]\n   (vars/alter-var-root (global-hierarchy ctx)\n                        (fn [h]\n                          (derive h tag parent)))\n   nil)\n  ([_ctx h tag parent]\n   (derive h tag parent)))\n\n(defn underive*\n  ([ctx tag parent]\n   (vars/alter-var-root (global-hierarchy ctx)\n                        (fn [h]\n                          (underive h tag parent)))\n   nil)\n  ([_ctx h tag parent]\n   (underive h tag parent)))\n\n(defn isa?*\n  ([ctx child parent]\n   (let [h @(global-hierarchy ctx)]\n     (isa? h child parent)))\n  ([_ctx h child parent]\n   (isa? h child parent)))\n\n(defn ancestors*\n  ([ctx tag]\n   (let [h @(global-hierarchy ctx)]\n     (ancestors h tag)))\n  ([_ctx h tag]\n   (ancestors h tag)))\n\n(defn descendants*\n  ([ctx tag]\n   (let [h @(global-hierarchy ctx)]\n     (descendants h tag)))\n  ([_ctx h tag]\n   (descendants h tag)))\n\n(defn parents*\n  ([ctx tag]\n   (let [h @(global-hierarchy ctx)]\n     (parents h tag)))\n  ([_ctx h tag]\n   (parents h tag)))\n"]}