{"version":3,"sources":["shadow/cljs/devtools/client/hud.cljs"],"mappings":"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","names":["js/goog.define","shadow.cljs.devtools.client.hud/show-progress","shadow.cljs.devtools.client.hud/show-warnings","shadow.cljs.devtools.client.hud/show-errors","js/shadow","js/shadow.cljs","js/shadow.cljs.devtools","js/shadow.cljs.devtools.client","js/shadow.cljs.devtools.client.hud","js/shadow.cljs.devtools.client.hud.dom-available?","shadow.cljs.devtools.client.hud/dom-available?","js/goog.global.document","shadow.cljs.devtools.client.hud/open-file","file","line","column","js/console.log","shadow.cljs.devtools.client.env/get-url-base","js/fetch","shadow.cljs.devtools.client.shared/transit-str","p1__51965#","result-text","data","shadow.cljs.devtools.client.shared/transit-read","var_args","G__51968","shadow.cljs.devtools.client.hud/dom-insert","js/Error","node","shadow.cljs.devtools.client.hud.dom_insert","js/document.body","where","el","shadow.dom/dom-node","id","cljs.core/seq","temp__5757__auto__","x","shadow.dom.by_id","shadow.dom/remove","shadow.dom.append","shadow.cljs.devtools.client.hud/hud-id","shadow.cljs.devtools.client.hud/load-id","shadow.cljs.devtools.client.hud/logo-svg","cljs.core/Delay","s-path","shadow.dom.svg","shadow.cljs.devtools.client.hud/load-start","cljs.core/deref","shadow.cljs.devtools.client.hud/load-end-success","container-el","shadow.animate/start","shadow.animate.transition","c__35759__auto__","cljs.core.async.chan","cljs.core.async.impl.dispatch/run","f__35760__auto__","switch__35545__auto__","state_51991","state_val_51992","inst_51979","cljs.core.async.impl.ioc-helpers/take!","inst_51981","inst_51982","inst_51983","inst_51984","inst_51985","cljs.core/PersistentHashMap","inst_51986","statearr-51993","inst_51988","inst_51989","statearr-51994","cljs.core.async.impl.ioc-helpers/return-chan","statearr-51995","state-machine__35546__auto__","ret-value__35547__auto__","result__35548__auto__","cljs.core/keyword-identical?","ex__35549__auto__","e51996","statearr-51997","statearr-51998","cljs.core/first","state__35761__auto__","statearr-51999","cljs.core.async.impl.ioc-helpers/USER-START-IDX","cljs.core.async.impl.ioc-helpers/run-state-machine-wrapped","cljs.core.async/timeout","shadow.cljs.devtools.client.hud/load-end","shadow.cljs.devtools.client.hud/hud-hide","d","shadow.cljs.devtools.client.hud/source-line-styles","shadow.cljs.devtools.client.hud/source-highlight-styles","cljs.core.assoc","shadow.cljs.devtools.client.hud/source-line-html","start-idx","lines","styles","iter__4611__auto__","s__52007","cljs.core/LazySeq","temp__5753__auto__","cljs.core/chunked-seq?","c__4609__auto__","size__4610__auto__","cljs.core/count","b__52009","cljs.core/chunk-buffer","i__52008","vec__52010","cljs.core/-nth","cljs.core.nth","cljs.core/chunk-append","cljs.core/chunk-cons","cljs.core/chunk","iter__52006","cljs.core/chunk-rest","vec__52013","cljs.core/cons","cljs.core/rest","idx","text","cljs.core.map_indexed","cljs.core/vector","goog.string/format","shadow.cljs.devtools.client.hud/sep-length","G__52017","shadow.cljs.devtools.client.hud/sep-line","shadow.cljs.devtools.client.hud.sep_line","label","offset","sep-len","js/Math.max","len","sep","c","cljs.core.repeat","clojure.string.join","p__52024","map__52025","cljs.core/--destructure-map","cljs.core.get","shadow.cljs.devtools.client.hud/file-link","resource-name","warning","cljs.core/not","e","shadow.dom.ev_stop","p__52026","map__52027","shadow.cljs.devtools.client.hud/html-for-warning","msg","source-excerpt","map__52028","before","after","arrow-idx","or__4212__auto__","p__52034","map__52035","shadow.cljs.devtools.client.hud/hud-warnings","type","info","map__52036","sources","sources-with-warnings","cljs.core.remove","p1__52033#","cljs.core.filter","cljs.core.into","s__52038","xs__6308__auto__","map__52044","iterys__4607__auto__","s__52040","b__52042","i__52041","iter__52039","fs__4608__auto__","cljs.core.concat","iter__52037","warnings","p__52051","map__52052","shadow.cljs.devtools.client.hud/hud-error","report","shadow.cljs.devtools.client.hud/connection-error-id","shadow.cljs.devtools.client.hud/connection-error-clear!","shadow.cljs.devtools.client.hud/connection-error","shadow.cljs.devtools.client.hud/load-failure","error","task","remaining","js/console.error","cljs.core/chunk-first"],"sourcesContent":["(ns shadow.cljs.devtools.client.hud\n  (:require\n    [shadow.dom :as dom]\n    [shadow.animate :as anim]\n    [shadow.cljs.devtools.client.env :as env]\n    [shadow.cljs.devtools.client.shared :as shared]\n    [cljs.core.async :as async :refer (go)]\n    [goog.string.format]\n    [goog.string :refer (format)]\n    [clojure.string :as str]))\n\n(goog-define show-progress true)\n\n(goog-define show-warnings true)\n\n(goog-define show-errors true)\n\n(defonce dom-available? (some? js/goog.global.document))\n\n(defn open-file [file line column]\n  (js/console.log \"opening file\" file line column)\n\n  (-> (str (env/get-url-base) \"/api/open-file\")\n      (js/fetch\n        #js {:method \"POST\"\n             :cache \"no-cache\"\n             :mode \"cors\"\n             :body (shared/transit-str\n                     {:file file\n                      :line line\n                      :column column})})\n      (.then #(.text %))\n      (.then (fn [result-text]\n               (let [data (shared/transit-read result-text)]\n                 (js/console.log \"open file result\" data))))))\n\n(comment\n  (open-file \"README.md\" 10 1))\n\n(defn dom-insert\n  ([node]\n   (dom-insert js/document.body node))\n  ([where node]\n   (let [el (dom/dom-node node)\n         id (.-id el)]\n     (assert (seq id))\n     (when-some [x (dom/by-id id)]\n       (dom/remove x))\n     (dom/append where el)\n     )))\n\n(def hud-id \"shadow-hud-container\")\n\n(def load-id \"shadow-hud-loading-container\")\n\n(def logo-svg\n  (delay\n    (let [s-path\n          \"M247.183941,141.416413 C247.183941,74.7839971 148.383423,78.9723529 148.383423,141.416413 C148.383423,203.860473 265.090698,171.864644 265.090698,248.900057 C265.090698,325.93547 135,325.851749 135,251.708304\"]\n      (dom/svg\n        {:id \"shadow-cljs-logo\"\n         :version \"1.1\"\n         :viewBox \"0 0 400 400\"\n         :style {:display \"block\"}\n         :height \"60px\"\n         :width \"60px\"}\n        [:title \"shadow-cljs\"]\n        [:defs\n         [:mask#shadow-cljs-logo-mask {:fill \"#fff\"}\n          [:circle {:r \"200\" :cy \"200\" :cx \"200\"}]]]\n        [:g\n         {:fill-rule \"evenodd\"\n          :fill \"none\"\n          :stroke-width \"0\"\n          :stroke \"none\"\n          :mask \"url(#shadow-cljs-logo-mask)\"}\n\n         [:g.circles\n          [:circle.blue {:r \"200\" :cy \"200\" :cx \"200\" :fill \"#4F80DF\"}]\n          [:circle.light-blue {:r \"71.5\" :cy \"200\" :cx \"370\" :fill \"#89B4FF\"}]\n          [:circle.dark-green {:r \"180\" :cy \"360\" :cx \"60\" :fill \"#40B400\"}]\n          [:circle.light-green {:r \"129\" :cy \"320\" :cx \"280\" :fill \"#76E013\"}]\n          [:animateTransform\n           {:attributeType \"xml\"\n            :attributeName \"transform\"\n            :type \"rotate\"\n            :from \"0 200 200\"\n            :to \"360 200 200\"\n            :dur \"3s\"\n            :repeatCount \"indefinite\"}]]\n\n         ;; S shadow\n         [:g {:transform \"translate(10,10)\"}\n          [:path\n           {:stroke-linecap \"square\"\n            :stroke-width \"16\"\n            :stroke \"#aaa\"\n            :d s-path}]]\n         ;; S\n         [:path\n          {:stroke-linecap \"square\"\n           :stroke-width \"16\"\n           :stroke \"#FFFFFF\"\n           :d s-path}]\n         ]))))\n\n(defn load-start []\n  (when dom-available?\n    (when show-progress\n      (dom-insert\n        [:div {:id load-id\n               :style {:position \"fixed\"\n                       :pointer-events \"none\"\n                       :left \"0px\"\n                       :bottom \"20px\"\n                       :z-index \"10000\"}}\n         [:div {:style {:background \"#eee\"\n                        :border-top-right-radius \"40px\"\n                        :border-bottom-right-radius \"40px\"\n                        :box-shadow \"2px 2px 10px #aaa\"\n                        :padding \"10px\"}}\n          @logo-svg]]))))\n\n(defn load-end-success []\n  (when dom-available?\n    (when show-progress\n      (when-some [container-el (dom/by-id load-id)]\n        (let [el (.-firstChild container-el)]\n          (anim/start 500 {el (anim/transition :background \"#eee\" \"#40B400\" \"ease-out\")})\n          (go (<! (async/timeout 250))\n              (<! (anim/start 250 {el (anim/transition :opacity \"1\" \"0\" \"ease-in\")}))\n              (dom/remove container-el)\n\n              ))))))\n\n(defn load-end []\n  (when dom-available?\n    (when-some [el (dom/by-id load-id)]\n      (dom/remove el))))\n\n(defn hud-hide []\n  (when dom-available?\n    (when-some [d (dom/by-id hud-id)]\n      (dom/remove d))))\n\n(def source-line-styles\n  {:padding \"0\"\n   :margin \"0\"})\n\n(def source-highlight-styles\n  (assoc source-line-styles\n    :font-weight \"bold\"))\n\n(defn source-line-html\n  [start-idx lines styles]\n  (->> (for [[idx text] (map-indexed vector lines)]\n         [:pre {:style styles} (format \"%4d | %s\" (+ 1 idx start-idx) text)])))\n\n(def sep-length 80)\n\n(defn sep-line\n  ([]\n   (sep-line \"\" 0))\n  ([label offset]\n   (let [sep-len (js/Math.max sep-length offset)\n         len (count label)\n\n         sep\n         (fn [c]\n           (->> (repeat c \"-\")\n                (str/join \"\")))]\n     (str (sep offset) label (sep (- sep-len (+ offset len)))))))\n\n(defn file-link [{:keys [resource-name file line column] :as warning}]\n  (if-not file\n    [:span resource-name]\n\n    [:span {:style {:text-decoration \"underline\"\n                    :color \"blue\"\n                    :cursor \"pointer\"}\n            :on {:click (fn [e]\n                          (dom/ev-stop e)\n                          (open-file file line column)\n                          )}}\n\n     resource-name]))\n\n(defn html-for-warning [{:keys [resource-name msg file line column source-excerpt] :as warning}]\n  [:div {:style {:border \"2px solid #ccc\"\n\n                 :margin-bottom \"10px\"}}\n\n   [:div {:style {:line-height \"16px\"\n                  :background-color \"#fadb64\"\n                  :padding \"10px\"\n                  :font-size \"1.2em\"\n                  :font-weight \"bold\"}}\n    [:span \"WARNING in \"]\n    (file-link warning)]\n\n   (when source-excerpt\n     (let [{:keys [start-idx before line after]} source-excerpt]\n       [:div {:style {:padding \"10px 10px\"\n                      :background-color \"#fff\"\n                      :border-top \"2px solid #ccc\"}}\n        (source-line-html start-idx before source-line-styles)\n        (source-line-html (+ start-idx (count before)) [line] source-highlight-styles)\n        (let [arrow-idx (+ 6 (or column 1))]\n          [:pre {:style source-highlight-styles} (sep-line \"^\" arrow-idx)])\n        [:div {:style {:font-weight \"bold\" :font-size \"1.2em\" :padding \"10px 0\"}} msg]\n        [:pre {:style source-highlight-styles} (sep-line)]\n        (source-line-html (+ start-idx (count before) 1) after source-line-styles)]\n       ))])\n\n(defn hud-warnings [{:keys [type info] :as msg}]\n  (when dom-available?\n    (let [{:keys [sources]}\n          info\n\n          sources-with-warnings\n          (->> sources\n               (remove :from-jar)\n               (filter #(seq (:warnings %)))\n               (into []))]\n\n      (when (seq sources-with-warnings)\n        ;; TODO: fancy transition from logo to warnings\n        (load-end)\n        (when show-warnings\n          (dom-insert\n            [:div\n             {:id hud-id\n              :style {:position \"fixed\"\n                      :z-index \"10000\"\n                      :left \"0px\"\n                      :bottom \"0px\"\n                      :right \"0px\"\n                      :display \"flex\"\n                      :flex-direction \"column\"\n                      :color \"#000\"\n                      :font-family \"monospace\"\n                      :font-size \"12px\"}}\n             [:div {:style {:align-self \"flex-end\"\n                            :background \"#fff\"\n                            :border \"2px solid #ccc\"\n                            :border-bottom \"0px\"\n                            :cursor \"pointer\"\n                            :padding \"6px\"\n                            :margin-bottom \"-2px\"\n                            :z-index \"10000\"}\n                    :on {:click hud-hide}}\n              \"Close\"]\n             [:div {:style {:background \"#fff\"\n                            :border-top \"2px solid #ccc\"\n                            :flex \"1\"\n                            :max-height \"300px\"\n                            :padding \"10px 10px 0\"\n                            :overflow \"auto\"}}\n              (for [{:keys [warnings]} sources-with-warnings\n                    warning warnings]\n                (html-for-warning warning))]]))))))\n\n(defn hud-error [{:keys [report] :as msg}]\n  (when dom-available?\n    (when show-errors\n      (dom-insert\n        [:div\n         {:id hud-id\n          :style {:position \"fixed\"\n                  :left \"0px\"\n                  :top \"0px\"\n                  :bottom \"0px\"\n                  :right \"0px\"\n                  :color \"#000\"\n                  :background-color \"#fff\"\n                  :border \"5px solid red\"\n                  :z-index \"10000\"\n                  :padding \"20px\"\n                  :overflow \"auto\"\n                  :font-family \"monospace\"\n                  :font-size \"12px\"}}\n         [:div {:style \"color: red; margin-bottom: 10px; font-size: 2em;\"} \"Compilation failed!\"]\n         [:pre report]]))))\n\n(def connection-error-id \"shadow-connection-error\")\n\n(defn connection-error-clear! []\n  (when dom-available?\n    (when-some [x (dom/by-id connection-error-id)]\n      (dom/remove x))))\n\n(defn connection-error [msg]\n  (when dom-available?\n    (when show-errors\n      (dom-insert\n        [:div {:id connection-error-id\n               :style {:position \"fixed\"\n                       :pointer-events \"none\"\n                       :left \"0px\"\n                       :bottom \"20px\"\n                       :z-index \"10000\"}}\n         [:div {:style {:background \"#c00\"\n                        :border-top-right-radius \"40px\"\n                        :border-bottom-right-radius \"40px\"\n                        :box-shadow \"2px 2px 10px #aaa\"\n                        :padding \"10px\"\n                        :font-family \"monospace\"\n                        :font-size \"14px\"\n                        :font-weight \"bold\"\n                        :color \"#fff\"}}\n          (str \"shadow-cljs - \" msg)\n          ]]))))\n\n(defn load-failure [error task remaining]\n  (load-end)\n  (js/console.error \"reload-failed\" error)\n  (connection-error (str \"[reload failed] \" (.-message error))))"]}