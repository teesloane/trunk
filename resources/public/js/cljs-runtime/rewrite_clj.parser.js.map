{"version":3,"sources":["rewrite_clj/parser.cljs"],"mappings":";AAOA;;;2BAAA,3BAAMA,8DAESC;AAFf,AAGE,OAACC,mCAAaD;;AAEhB;;;+BAAA,/BAAME,sEAESF;AAFf,AAGE,IAAMG,4HAAW,mDAAA,nDAACC,tEACD,AAACC,mDAAWC,jGACZ,AAACC;AAFD,AAAa,OAACR,yBAAMC;;AAArC,AAGE,OAACQ,oBACC,CAACC,4DAAAA,mEAAAA,TAAgBN,+CAAAA,QACjB,AAACO,eAAK,AAACC,gBAAMR;;AAInB;;;kCAAA,lCAAMS,4EAEHC;AAFH,AAGE,OAACd,yBAAM,CAACe,6EAAAA,gFAAAA,LAA4BD,4DAAAA;;AAEtC;;;sCAAA,tCAAME,oFAEHF;AAFH,AAGE,OAACX,6BAAU,CAACY,6EAAAA,gFAAAA,LAA4BD,4DAAAA","names":["rewrite-clj.parser/parse","reader","rewrite-clj.parser.core/parse-next","rewrite-clj.parser/parse-all","nodes","cljs.core.repeatedly","cljs.core.take_while","cljs.core/identity","cljs.core.doall","cljs.core/with-meta","rewrite-clj.node/forms-node","cljs.core/meta","cljs.core/first","rewrite-clj.parser/parse-string","s","rewrite-clj.reader/indexing-push-back-reader","rewrite-clj.parser/parse-string-all"],"sourcesContent":["(ns rewrite-clj.parser\n  (:require [rewrite-clj.parser.core :as p]\n            [rewrite-clj.node :as node]\n            [rewrite-clj.reader :as r]))\n\n;; ## Parser Core\n\n(defn parse\n  \"Parse next form from the given reader.\"\n  [^not-native reader]\n  (p/parse-next reader))\n\n(defn parse-all\n  \"Parse all forms from the given reader.\"\n  [^not-native reader]\n  (let [nodes (->> (repeatedly #(parse reader))\n                   (take-while identity)\n                   (doall))]\n    (with-meta\n      (node/forms-node nodes)\n      (meta (first nodes)))))\n\n;; ## Specialized Parsers\n\n(defn parse-string\n  \"Parse first form in the given string.\"\n  [s]\n  (parse (r/indexing-push-back-reader s)))\n\n(defn parse-string-all\n  \"Parse all forms in the given string.\"\n  [s]\n  (parse-all (r/indexing-push-back-reader s)))\n\n\n"]}