{"version":3,"sources":["rewrite_clj/node/forms.cljs"],"mappings":"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","names":["this__4461__auto__","k__4462__auto__","this__4463__auto__","k29191","else__4464__auto__","G__29209","cljs.core/Keyword","children","cljs.core.get","__extmap","this__4481__auto__","f__4482__auto__","init__4483__auto__","cljs.core.reduce","ret__4484__auto__","p__29218","vec__29221","k__4485__auto__","cljs.core.nth","v__4486__auto__","this__4476__auto__","writer__4477__auto__","opts__4478__auto__","pr-pair__4479__auto__","keyval__4480__auto__","cljs.core/pr-sequential-writer","cljs.core.concat","cljs.core/PersistentVector","G__29190","cljs.core/RecordIter","cljs.core/-iterator","cljs.core/nil-iter","this__4459__auto__","__meta","this__4456__auto__","__hash","this__4465__auto__","cljs.core/count","this__4457__auto__","h__4319__auto__","coll__4458__auto__","cljs.core/hash-unordered-coll","this29192","other29193","cljs.core._EQ_","cljs.core/PROTOCOL_SENTINEL","this__4471__auto__","k__4472__auto__","cljs.core/contains?","cljs.core.dissoc","cljs.core/-with-meta","cljs.core.into","cljs.core/not-empty","this__4468__auto__","G__29254","this__4469__auto__","k__4470__auto__","pred__29258","cljs.core/keyword-identical?","expr__29259","cljs.core.assoc","this__4474__auto__","cljs.core/seq","cljs.core/MapEntry","this__4460__auto__","this__4466__auto__","entry__4467__auto__","cljs.core/vector?","cljs.core/-nth","cljs.core/-conj","rewrite-clj.node.forms/FormsNode","this__4505__auto__","cljs.core/List","writer__4506__auto__","cljs.core/-write","G__29206","extmap__4501__auto__","G__29273","cljs.core/record?","rewrite-clj.node.forms/->FormsNode","rewrite-clj.node.forms/map->FormsNode","_","es","rewrite-clj.node.protocols/sexprs","cljs.core/next","cljs.core.list_STAR_","cljs.core/first","rewrite-clj.node.protocols/sum-lengths","rewrite-clj.node.protocols/concat-strings","this","children'","rewrite-clj.node.forms/forms-node"],"sourcesContent":["(ns rewrite-clj.node.forms\n  (:require [rewrite-clj.node.protocols :as node]))\n\n;; ## Node\n\n(defrecord FormsNode [children]\n  node/Node\n  (tag [_]\n    :forms)\n  (printable-only? [_]\n    false)\n  (sexpr [_]\n    (let [es (node/sexprs children)]\n      (if (next es)\n        (list* 'do es)\n        (first es))))\n  (length [_]\n    (node/sum-lengths children))\n  (string [_]\n    (node/concat-strings children))\n\n  node/InnerNode\n  (inner? [_]\n    true)\n  (children [_]\n    children)\n  (replace-children [this children']\n    (assoc this :children children'))\n\n  Object\n  (toString [this]\n    (node/string this)))\n\n;; TODO: Macro fun !\n;(node/make-printable! FormsNode)\n\n;; ## Constructor\n\n(defn forms-node\n  \"Create top-level node wrapping multiple children\n   (equals an implicit `do` on the top-level).\"\n  [children]\n  (->FormsNode children))\n"]}