{"version":3,"sources":["rewrite_clj/parser/whitespace.cljs"],"mappings":";AAIA;;;;iDAAA,jDAAMA,0GAGSC;AAHf,AAIE,GAAI,AAACC,oCAAa,CAACC,6DAAAA,qEAAAA,VAAYF,iDAAAA;AAC7B,IAAAG,WACE,AAACE,4DAAaL,OAAOC;AADvB,AAAA,kIAAAE,oDAAAA,9KAACC,8DAAAA,wEAAAA;;AAED,IAAAE,WACE,AAACD,4DAAaL,OAAOQ;AADvB,AAAA,wIAAAF,uDAAAA,vLAACC,iEAAAA,2EAAAA","names":["rewrite-clj.parser.whitespace/parse-whitespace","reader","rewrite-clj.reader/linebreak?","rewrite-clj.reader/peek-char","G__29773","rewrite-clj.node/newline-node","rewrite_clj.reader.read_while","G__29774","rewrite-clj.node/whitespace-node","rewrite-clj.reader/space?"],"sourcesContent":["(ns rewrite-clj.parser.whitespace\n  (:require [rewrite-clj.node :as node]\n            [rewrite-clj.reader :as r]))\n\n(defn parse-whitespace\n  \"Parse as much whitespace as possible. The created node can either contain\n   only linebreaks or only space/tabs.\"\n  [^not-native reader]\n  (if (r/linebreak? (r/peek-char reader))\n    (node/newline-node\n      (r/read-while reader r/linebreak?))\n    (node/whitespace-node\n      (r/read-while reader r/space?))))\n"]}